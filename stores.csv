Prompt:
"""I want to set up the user management flow for my survey web app as follows:"
1. CSV Import Script (Initial Step):
Create a JavaScript script to import users from a CSV file into MongoDB using a schema with the following fields: (table name 'users' in current MONGODB_URI)
id (auto-generated by MongoDB)
userid (a unique employee ID or identifier)
username
loginid (a unique for login)
password (should be hashed with bcrypt before saving)
"role (e.g., admin, user)"
"leader (reference to another user’s username and role: role 'PRT' will under 'TDS', role 'TDS' will under 'TDL', or a boolean flag)."
Ensure that username or userid is unique.
2. Login Page for Survey Users:
Implement a login page where users can log in with their loginid and password.
Passwords must be checked with bcrypt.
"On successful login, issue a JWT access token (short expiry, e.g. 15 minutes) and a refresh token (longer expiry, e.g. 7 days)."
Protect survey submission and admin routes using middleware that validates the access token.
3. Admin Page:
Create a login page for current Admin page and only role = admin users can login.
New tab: User management
View users (with pagination).
Add/Edit/Delete users.
Import users directly via CSV (replacing the old standalone script).
Export users back to CSV for backup or offline editing.
Ensure database and frontend stay in sync after imports and edits.
Validate CSV imports (skip rows with errors and report them).
Prevent overwriting or deleting the default super admin account.
4. Cleanup:
Remove the old standalone CSV import script since the functionality now exists in the admin panel.
5. Additional Requirements:
Track lastLogin for each user.
Add isActive flag to allow disabling accounts without deleting them.
"Add audit logging (who imported, who deleted/edited users, and when)."
Ensure mobile and desktop compatibility for the admin UI.
"Please provide code and best practices for implementing this flow, including backend (MongoDB/Mongoose, Node.js, JWT, bcrypt) and frontend (login page, admin user management with CSV import/export, validation, and role-based access control)."""
